{"version":3,"sources":["App.js","index.js"],"names":["marked","require","setOptions","breaks","renderer","Renderer","link","href","title","text","App","props","state","markdown","editorMaximized","previewMaximized","handleChange","bind","handleEditorMaximize","handlePreviewMaximize","e","this","setState","target","value","classes","className","onClick","id","onChange","type","dangerouslySetInnerHTML","__html","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oMAEIA,G,MAASC,EAAQ,KAgDrBD,EAAOE,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAW,IAAIJ,EAAOK,SAC5BD,EAASE,KAAO,SAAUC,EAAMC,EAAOC,GACrC,MAAO,mCAA4BF,EAA5B,aAAqCE,GAAS,Q,IAyExCC,E,kDArEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SA5DW,mmCA6DXC,iBAAiB,EACjBC,kBAAkB,GAEpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBATZ,E,yDAWNG,GACXC,KAAKC,SAAS,CACZT,SAAUO,EAAEG,OAAOC,U,6CAIrBH,KAAKC,SAAS,CACZR,iBAAkBO,KAAKT,MAAME,oB,8CAI/BO,KAAKC,SAAS,CACZP,kBAAmBM,KAAKT,MAAMG,qB,+BAIhC,IAAMU,EAAUJ,KAAKT,MAAME,gBACvB,CAAC,uBAAwB,mBAAoB,kBAC7CO,KAAKT,MAAMG,iBACX,CAAC,kBAAmB,wBAAyB,kBAC7C,CAAC,aAAc,cAAe,oBAClC,OACE,6BACE,yBAAKW,UAAWD,EAAQ,IACtB,6BAASC,UAAU,WACjB,uBAAGA,UAAU,eADf,cAGE,uBAAGA,UAAWD,EAAQ,GAAIE,QAASN,KAAKH,wBAE1C,iCACE,8BACEU,GAAG,SACHC,SAAUR,KAAKL,aACfc,KAAK,OACLN,MAAOH,KAAKT,MAAMC,aAIxB,yBAAKa,UAAWD,EAAQ,IACtB,6BAASC,UAAU,WACjB,uBAAGA,UAAU,cADf,YAGE,uBAAGA,UAAWD,EAAQ,GAAIE,QAASN,KAAKH,wBAE1C,iCACE,yBACEa,wBAAyB,CACvBC,OAAQhC,EAAOqB,KAAKT,MAAMC,SAAU,CAAET,SAAUA,KAElDwB,GAAG,mB,GA7DCK,IAAMC,WCxDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.59f1871b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.scss\";\r\nlet marked = require(\"marked\");\r\n\r\nconst placeholder = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![Jaquoine Pheonix](https://google/Umyytc)\r\n`;\r\n\r\n// ALLOWS LINE BREAKS WITH RETURN BUTTON\r\nmarked.setOptions({\r\n  breaks: true,\r\n});\r\n\r\n// INSERTS target=\"_blank\" INTO HREF TAGS (required for codepen links)\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function (href, title, text) {\r\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + \"</a>\";\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      markdown: placeholder,\r\n      editorMaximized: false,\r\n      previewMaximized: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleEditorMaximize = this.handleEditorMaximize.bind(this);\r\n    this.handlePreviewMaximize = this.handlePreviewMaximize.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      markdown: e.target.value,\r\n    });\r\n  }\r\n  handleEditorMaximize() {\r\n    this.setState({\r\n      editorMaximized: !this.state.editorMaximized,\r\n    });\r\n  }\r\n  handlePreviewMaximize() {\r\n    this.setState({\r\n      previewMaximized: !this.state.previewMaximized,\r\n    });\r\n  }\r\n  render() {\r\n    const classes = this.state.editorMaximized\r\n      ? [\"editorWrap maximized\", \"previewWrap hide\", \"fa fa-compress\"]\r\n      : this.state.previewMaximized\r\n      ? [\"editorWrap hide\", \"previewWrap maximized\", \"fa fa-compress\"]\r\n      : [\"editorWrap\", \"previewWrap\", \"fa fa-arrows-alt\"];\r\n    return (\r\n      <div>\r\n        <div className={classes[0]}>\r\n          <section className=\"toolbar\">\r\n            <i className=\"fa fa-edit\"></i>\r\n            Code Editor\r\n            <i className={classes[2]} onClick={this.handleEditorMaximize} />\r\n          </section>\r\n          <section>\r\n            <textarea\r\n              id=\"editor\"\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              value={this.state.markdown}\r\n            />\r\n          </section>\r\n        </div>\r\n        <div className={classes[1]}>\r\n          <section className=\"toolbar\">\r\n            <i className=\"fa fa-eye\"></i>\r\n            Previewer\r\n            <i className={classes[2]} onClick={this.handleEditorMaximize} />\r\n          </section>\r\n          <section>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: marked(this.state.markdown, { renderer: renderer }),\r\n              }}\r\n              id=\"preview\"\r\n            />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}